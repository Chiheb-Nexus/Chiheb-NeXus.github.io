<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nexus Coding | Pour un monde meilleur !</title>
    <description>Blog dédié à la technologie de la Blockchain et au développement informatique en général</description>
    <link>https://chiheb-nexus.github.io/</link>
    <atom:link href="https://chiheb-nexus.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 23 May 2018 04:30:24 +0100</pubDate>
    <lastBuildDate>Wed, 23 May 2018 04:30:24 +0100</lastBuildDate>
    <generator>Jekyll v3.8.1</generator>
    
      <item>
        <title>Ethereum RLP: Explication</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1600/1*-Q00GpGTphTOtBWPRu1e3g.png&quot; /&gt;&lt;/p&gt; &lt;p&gt;Avant de continuer la lecture, je tiens à dire que cet article est une tentative d’explication du schéma d’encodage RLP, utilisé par Ethereum, d’une manière simple et concrète avec des exemples.&lt;/p&gt; &lt;p&gt;Ce qui va suivre, c’est une tentative d’explication de ce que j’ai pu comprendre de l’encodage RLP qu’Ethereum utilise. Et c’est à vous de chercher encore et de valider ou non ce que vous aller rencontrer tout le long de cet article.&lt;/p&gt; &lt;h2 id=&quot;définition&quot;&gt;Définition:&lt;/h2&gt; &lt;p&gt;Le schéma d’encodage RLP (Recursive Length Prefix) est un schéma de sérialisation d’objets spatialement efficace utilisé dans Ethereum.&lt;/p&gt; &lt;p&gt;La spécifité de ce...</description>
        <pubDate>Mon, 21 May 2018 03:17:31 +0100</pubDate>
        <link>https://chiheb-nexus.github.io/ethereumrlp/</link>
        <guid isPermaLink="true">https://chiheb-nexus.github.io/ethereumrlp/</guid>
        
        <category>ethereum</category>
        
        <category>sha3</category>
        
        <category>rlp</category>
        
        <category>encoding</category>
        
        <category>decoding</category>
        
        
        <category>bitcoin</category>
        
        <category>blockchain</category>
        
      </item>
    
      <item>
        <title>Ethereum Smart Contract</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/0*PFwVdgw-2tqj8LZV.png&quot; /&gt;&lt;/p&gt; &lt;p&gt;Les contrats intelligents (en anglais Smart Contracts) sont des protocoles informatiques qui facilitent, vérifient et exécutent la négociation ou l’exécution d’un contrat, ou qui rendent une clause contractuelle inutile (car rattachée au contrat intelligent). Les contrats intelligents ont généralement une interface utilisateur et émulent la logique des clauses contractuelles.&lt;/p&gt; &lt;p&gt;Les partisans des contrats intelligents affirment que de nombreux types de clauses contractuelles peuvent ainsi être partiellement ou totalement auto-exécutées ou exécutées à la validation ou les deux.&lt;/p&gt; &lt;p&gt;Les contrats intelligents visent à assurer une sécurité supérieure à la mise en application de la loi sur les contrats...</description>
        <pubDate>Sun, 13 May 2018 19:21:31 +0100</pubDate>
        <link>https://chiheb-nexus.github.io/smartcontract/</link>
        <guid isPermaLink="true">https://chiheb-nexus.github.io/smartcontract/</guid>
        
        <category>ethereum</category>
        
        <category>web3</category>
        
        <category>web3.py</category>
        
        <category>infura.io</category>
        
        <category>blockchain</category>
        
        <category>smart contract</category>
        
        <category>solidity</category>
        
        
        <category>ethereum</category>
        
        <category>blockchain</category>
        
      </item>
    
      <item>
        <title>Génération des adresses Bitcoin</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://qph.fs.quoracdn.net/main-qimg-6c2c189f74309b175549396b1eb00b7f&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;adresse-bitcoin-&quot;&gt;Adresse Bitcoin ?&lt;/h2&gt; &lt;p&gt;Une adresse Bitcoin, ou simplement une adresse, est un identifiant de 26 à 35 caractères alphanumériques, commençant par le chiffre 1 ou 3, qui représente une destination possible pour un paiement bitcoin. Les adresses peuvent être générées gratuitement par n’importe quel utilisateur de Bitcoin. Par exemple, en utilisant &lt;a href=&quot;https://en.bitcoin.it/wiki/Bitcoin_Core&quot;&gt;Bitcoin Core&lt;/a&gt;, vous pouvez cliquer sur “New Address” et créer une adresse. Il est également possible d’obtenir une adresse Bitcoin en utilisant un compte auprès d’un service d’échange ou de portefeuille en ligne. [&lt;a href=&quot;https://en.bitcoin.it/wiki/Address&quot;&gt;Source: bitcoin wiki&lt;/a&gt;]&lt;/p&gt; &lt;p&gt;Il y a actuellement trois formats d’adresses...</description>
        <pubDate>Thu, 10 May 2018 21:46:31 +0100</pubDate>
        <link>https://chiheb-nexus.github.io/btcaddress/</link>
        <guid isPermaLink="true">https://chiheb-nexus.github.io/btcaddress/</guid>
        
        <category>bitcoin</category>
        
        <category>sha256</category>
        
        <category>ripemd160</category>
        
        <category>base58</category>
        
        <category>blockchain</category>
        
        
        <category>bitcoin</category>
        
        <category>blockchain</category>
        
      </item>
    
  </channel>
</rss>
